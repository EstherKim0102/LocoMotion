"use strict";
var Graphics_Three_Util = require("../Graphics.Three.Util/index.js");
var setUniform = Graphics_Three_Util.ffi([ "material", "key", "value", "" ])("material.uniforms[key].value = value");
var materialShader = {};
var materialMeshBasic = {};
var materialLineBasic = {};
var getUniform = Graphics_Three_Util.ffi([ "material", "key", "" ])("material.uniforms[key].value");
var getOpacity = function (dictMaterial) {
    return Graphics_Three_Util.ffi([ "material", "" ])("material.opacity");
};
var getName = function (dictMaterial) {
    return Graphics_Three_Util.ffi([ "material", "" ])("material.name");
};
var getId = function (dictMaterial) {
    return Graphics_Three_Util.ffi([ "material", "" ])("material.id");
};
var createShaderRaw = Graphics_Three_Util.ffi([ "param", "" ])("new THREE.RawShaderMaterial(param)");
var createShader = Graphics_Three_Util.ffi([ "param", "" ])("new THREE.ShaderMaterial(param)");
var createMeshBasic = Graphics_Three_Util.ffi([ "param", "" ])("new THREE.MeshBasicMaterial(param)");
var createLineDashed = Graphics_Three_Util.ffi([ "param", "" ])("new THREE.LineDashedMaterial(param)");
var createLineBasic = Graphics_Three_Util.ffi([ "param", "" ])("new THREE.LineBasicMaterial(param)");
module.exports = {
    createMeshBasic: createMeshBasic,
    createLineBasic: createLineBasic,
    createLineDashed: createLineDashed,
    createShader: createShader,
    createShaderRaw: createShaderRaw,
    setUniform: setUniform,
    getUniform: getUniform,
    getId: getId,
    getName: getName,
    getOpacity: getOpacity,
    materialMeshBasic: materialMeshBasic,
    materialLineBasic: materialLineBasic,
    materialShader: materialShader
};
